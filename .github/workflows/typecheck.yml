name: Typecheck

on: [pull_request, workflow_dispatch]

jobs:
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - uses: bahmutov/npm-install@v1
      #   with:
      #     install-command: npm ci --legacy-peer-deps
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      - name: Run tsc
        run: pnpm typecheck
  gql:
    if: github.event_name == 'workflow_dispatch' || startsWith(github.event.pull_request.head.repo.full_name, 'replayio/')
    name: GraphQL schema types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - uses: bahmutov/npm-install@v1
      #   with:
      #     install-command: npm ci --legacy-peer-deps
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      - name: Fetch GraphQL schema
        run: pnpm gql:schema
        env:
          HASURA_KEY: ${{ secrets.HASURA_ADMIN_SECRET }}
      - name: Apollo codegen
        run: rm -rf src/graphql/*.ts && pnpm gql:gen
      - name: Checks if types match
        run: git diff --quiet HEAD -- src/graphql
